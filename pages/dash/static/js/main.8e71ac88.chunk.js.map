{"version":3,"sources":["Components/Admins/Admin.js","Components/Admins/Admins.js","Components/Articles/Article.js","Components/Articles/Articles.js","Components/Dates/DateTour.js","Components/Dates/Dates.js","Components/Products/Product.js","Components/Products/Products.js","Components/Messages/Message.js","Components/Messages/Messages.js","Components/Experiences/Experience.js","Components/Experiences/Experiences.js","Components/dashboard.js","Components/firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Admin","props","adminInfo","isEditing","scope","index","name","poste","email","onClick","onToggleUpdateAdmin","parseInt","type","class","onToggleDeleteAdmin","placeholder","aria-label","defaultValue","Admins","admins","formStyle","addAdmin","display","className","onToggleAddAdmin","style","action","required","onToggleSubmitAdmin","map","admin","Article","article","imgStyle","backgroundImage","img","backgroundSize","backgroundRepeat","backgroundPosition","width","height","title","resume","text","date","author","onToggleUpdateArticle","onToggleDeleteArticle","src","alt","for","id","rows","onChange","uploadFile","Articles","articles","isAddArticle","formDisplay","onToggleAddArticle","onToggleSubmitArticle","DateTour","dateTour","Date","toLocaleDateString","year","month","day","isAvailableDateColor","isAvailableDate","isAvailable","color","dateInfo","continent","country","city","place","link","onToggleUpdateDate","onToggleDeleteDate","value","Dates","dates","sort","a","b","addDate","onToggleAddDate","selected","defaultChecked","onToggleSubmitDate","Product","sizes","size","availableSizes","push","listOfSizes","i","length","produit","description","price","onToggleUpdateProduct","onToggleDeleteProduct","Products","products","addProduct","onToggleAddProduct","onToggleSubmitProduct","product","Message","mailto","hour","subject","message","href","onToggleDeleteMessage","Messages","messages","Experience","buttonDisplay","certificateDisplay","isValidated","event","onToggleValidateExperience","onToggleDeleteExperience","Experiences","experiences","experience","Dashboard","componentToDisplay","displayDashboard","administrateurs","publications","boutique","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","onToggleLogout","setDisplayDashboard","aria-current","data-feather","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","onAuthStateChanged","user","window","location","firebaseDb","database","ref","setStateData","setter","path","child","on","snapshot","values","val","valuesList","updateData","element","update","deleteData","remove","pushData","data","getCurrentDate","getUTCFullYear","getMonth","getDate","substr","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","isMailValid","indexOf","split","isNameValid","Apps","useState","setAdmins","connectedUser","setConnectedUser","setAddAdmin","setArticles","setIsAddArticle","setDates","setAddDate","setProducts","setAddProduct","setMessages","setExperiences","clearArticleForm","inputs","textareas","j","useEffect","userName","document","querySelector","userImg","innerHTML","displayName","photoURL","preventDefault","querySelectorAll","imgPath","trim","storage","substring","lastIndexOf","getDownloadURL","fire","icon","file","target","files","imgRef","put","selectedArticle","updateArticleInfo","swal","clearProductForm","checked","sizeS","sizeM","sizeL","sizeXL","console","log","S","M","L","XL","selectedProduct","filter","updateDate","continentSelect","avaibilitySelect","updateDateInfo","select","newDateInfo","newAdminInfo","signOut","updateAdmin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.8e71ac88.chunk.js","sourcesContent":["const Admin = (props) => {\r\n    \r\n    let adminInfo = '';\r\n    if (props.isEditing === false) {\r\n        adminInfo = (<tr>\r\n                    <th  scope=\"row\">{props.index+1}</th>\r\n                    <td>{props.name}</td>\r\n                    <td>{props.poste}</td>\r\n                    <td>{props.email}</td>\r\n                    <td>\r\n                    <button onClick={() => {\r\n                        props.onToggleUpdateAdmin(parseInt(props.index));\r\n                    }} type=\"button\" class=\"fas fa-edit btn btn-outline-dark\"></button>\r\n                    <button  onClick={() => {\r\n                        props.onToggleDeleteAdmin(parseInt(props.index));\r\n                    }} type=\"button\" class=\"fa fa-trash btn btn-outline-danger\"></button>\r\n                    </td>\r\n                </tr>);\r\n    }\r\n    if (props.isEditing === true){\r\n        adminInfo = (<tr>\r\n            <th scope=\"row\"></th>\r\n            <td><input type=\"text\" class=\"name form-control\" placeholder=\"Nom\" aria-label=\"First name\" defaultValue={props.name}/></td>\r\n            <td><input type=\"text\" class=\"poste form-control\" placeholder=\"Poste\" aria-label=\"Last name\"  defaultValue={props.poste}/></td>\r\n            <td><input type=\"text\" class=\"email form-control\" placeholder=\"Email\" aria-label=\"Last name\"  defaultValue={props.email}/></td>\r\n            <td>\r\n            <button  onClick={() => {\r\n                props.onToggleUpdateAdmin(parseInt(props.index));\r\n            }} type=\"button\" class=\"fas fa-edit btn btn-outline-dark\"></button>\r\n            <button onClick={() => {\r\n                props.onToggleDeleteAdmin(parseInt(props.index));\r\n            }} type=\"button\" class=\"fa fa-trash btn btn-outline-danger\"></button>\r\n            </td>\r\n        </tr>);\r\n    }\r\n    return ( \r\n        <>\r\n        {adminInfo}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Admin;","import Admin from \"./Admin\";\r\nconst Admins = (props) => {\r\n  \r\n    let admins = props.admins;\r\n    let formStyle ={};\r\n    if (props.addAdmin === false) {\r\n      formStyle = {\r\n        display: 'none'\r\n      }\r\n    }else{\r\n      formStyle = {\r\n        display: 'block'\r\n      }\r\n    }\r\n    return ( \r\n        <div class=\"administrateurs\">\r\n                <h2 className=\"pt-3\">Administrateurs</h2>\r\n                <button type='submit' onClick={props.onToggleAddAdmin} \r\n                  class=\"btn btn-primary float-end\">{props.addAdmin === false ? 'Ajouter un administrateur' : 'Fermer'}</button>\r\n                  <div style={formStyle} className=\"adminFormContainer  col-12\">\r\n                  <form className='addAdmin  col-12' action=\"\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                          <input type=\"text\" class=\"name form-control\" placeholder=\"Nom\" aria-label=\"First name\"  required/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                          <input type=\"text\" class=\"poste form-control\" placeholder=\"Poste\" aria-label=\"Last name\" required/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <input type=\"text\" class=\"email form-control\" placeholder=\"Email\" aria-label=\"Last name\" required/>\r\n                          </div>\r\n                      </div>\r\n                      <button onClick={props.onToggleSubmitAdmin} class=\"closeForm m-2 btn btn-primary\">Ajouter</button>\r\n                  </form>\r\n                  </div>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Nom</th>\r\n                        <th scope=\"col\">Poste</th>\r\n                        <th scope=\"col\">Email</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody class=\"table\">\r\n                        {\r\n                        admins.map((admin, index) => {\r\n                           return <Admin key={index} index={index} {...admin}\r\n                           onToggleDeleteAdmin={props.onToggleDeleteAdmin}\r\n                           onToggleUpdateAdmin={props.onToggleUpdateAdmin}/>\r\n                        })}\r\n                    </tbody>\r\n                  </table>\r\n                  \r\n                  \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Admins;","const Article = (props) => {\r\n    let article = '';\r\n    let imgStyle = {\r\n        backgroundImage: \"url(\" + props.img + \")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        width : \"100%\",\r\n        height : \"300px\"\r\n\r\n    }\r\n    if (props.isEditing === false) {\r\n        article = (\r\n                    <div class=\"card\">\r\n                        <div style={imgStyle} class=\"card-img-top\">\r\n\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{props.title}</h5>\r\n                        <p class=\"card-text text-muted resume\">{props.resume}</p>\r\n                        <p class=\"card-text text\">{props.text}</p>\r\n                        <div className=\"bottom-card\">\r\n                            <p class=\"card-text\"><small class=\"text-muted\">{props.date}</small></p>\r\n                            <p class=\"card-text\">par {props.author}</p>\r\n                            <button onClick={() => {props.onToggleUpdateArticle(props.index)\r\n                            }} type=\"button\" class=\"fas fa-edit btn btn-dark\"></button>\r\n                            <button onClick={() => {props.onToggleDeleteArticle(props.index)\r\n                            }} type=\"button\" class=\"fa fa-trash btn btn-danger\"></button>\r\n                        </div>\r\n                        </div>\r\n                                        \r\n                    </div>\r\n                );\r\n    }else{\r\n        article = (\r\n                    <div class=\"updateArticleForm card\">\r\n                        <img src={props.img} class=\"card-img-top\" alt=\"...\"/>\r\n                        <form class=\" col  g-3\">\r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Titre</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.title}/>\r\n                        </div>\r\n                        <div class=\"col mb-3\">\r\n                            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Resumé</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" defaultValue={props.resume}></textarea>\r\n                        </div>\r\n                        <div class=\"col mb-3\">\r\n                            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Texte</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" defaultValue={props.text}></textarea>\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <label class=\"input-group-text pt-2 fas fa-upload\" for=\"inputGroupFile01\"></label>\r\n                            <input onChange={props.uploadFile} type=\"file\" class=\"form-control\" id=\"inputGroupFile01\" required/>\r\n                        </div>\r\n                        <div className=\"bottom-card\">\r\n                        <button onClick={() => {props.onToggleUpdateArticle(props.index)\r\n                        }} type=\"button\" class=\"fas fa-edit btn btn-dark\"></button>\r\n                        <button onClick={() => {props.onToggleDeleteArticle(props.index)\r\n                        }} type=\"button\" class=\"fa fa-trash btn btn-danger\"></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n    }\r\n    return ( \r\n        <div className=\"col-md-6 mb-4\">\r\n            {article}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Article;","import Article from \"./Article\";\r\nconst Articles = (props) => {\r\n    let articles = props.articles;\r\n    let isAddArticle = props.isAddArticle;\r\n    let formDisplay = {};\r\n    if (isAddArticle === false) {\r\n        formDisplay = {\r\n            display: 'none'\r\n        }\r\n    }else{\r\n        formDisplay = {\r\n            display: 'block'\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <div class=\"articles mb-5\">\r\n                <button onClick={props.onToggleAddArticle} type='submit' \r\n                class=\"my-2 btn btn-primary float-end\">{isAddArticle == false ? \"Ajouter une publication\" : \"Fermer\"}</button>\r\n                <h2 className=\"pt-3\">Publications</h2>\r\n                <div style={formDisplay} className=\"articleFormContainer col-12\">\r\n                <form class=\" articleForm col-12  g-3\">\r\n                    <div class=\"col\">\r\n                        <label for=\"inputEmail4\" class=\"form-label\">Titre</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"inputEmail4\"/>\r\n                    </div>\r\n                    <div class=\"col mb-3\">\r\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Resumé</label>\r\n                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <div class=\"col mb-3\">\r\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Texte</label>\r\n                        <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <label class=\"input-group-text\" for=\"inputGroupFile01\">Image</label>\r\n                        <input onChange={props.uploadFile} type=\"file\" class=\"form-control\" id=\"inputGroupFile01\"/>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <button onClick={props.onToggleSubmitArticle} type=\"submit\" class=\"btn btn-primary\">Publier</button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n                \r\n                <div class=\"d-flex col-12 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                    <div class=\"row card-group articleCards col-12 \">\r\n                        {articles.map((article, index) => {\r\n                            return <Article key={index}\r\n                            onToggleUpdateArticle={props.onToggleUpdateArticle} onToggleDeleteArticle={props.onToggleDeleteArticle}\r\n                            uploadFile={props.uploadFile} index={index} {...article}/>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Articles;","const DateTour = (props) => {\r\n    const options = {year: 'numeric', month: 'numeric', day: 'numeric' };\r\n    let date = props.date;\r\n    let dateTour = new Date(date).toLocaleDateString('fr-FR', options);\r\n    let isAvailableDateColor = \"\";\r\n    let isAvailableDate = {};\r\n    let isAvailable = props.isAvailable;\r\n    if (isAvailable === true) {\r\n        isAvailableDateColor = {\r\n            color : \"green\"\r\n        };\r\n        isAvailableDate = \"Disponible\";\r\n    }else{\r\n        isAvailableDateColor = {\r\n            color : \"red\"\r\n        };\r\n        isAvailableDate = \"Complet\";\r\n    }\r\n\r\n    let dateInfo = '';\r\n    if (props.isEditing === false) {\r\n        dateInfo = (<tr>\r\n                <th  scope=\"row\">{props.index + 1}</th>\r\n                <td>{dateTour}</td>\r\n                <td>{props.continent}</td>\r\n                <td>{props.country}</td>\r\n                <td>{props.city}</td>\r\n                <td>{props.place}</td>\r\n                <td style={isAvailableDateColor}>{isAvailableDate}</td>\r\n                <td>{props.link}</td>\r\n                <td>\r\n                <button onClick={() => {\r\n                    props.onToggleUpdateDate(parseInt(props.index));\r\n                }} type=\"button\" class=\"fas fa-edit btn btn-outline-dark\"></button>\r\n                <button  onClick={() => {\r\n                    props.onToggleDeleteDate(parseInt(props.index));\r\n                }} type=\"button\" class=\"fa fa-trash btn btn-outline-danger\"></button>\r\n                </td>\r\n            </tr>);\r\n    }\r\n    if (props.isEditing === true){\r\n        dateInfo = (\r\n            <tr className='dateTable'>\r\n                <th  scope=\"row\">{props.index + 1}</th>\r\n                <td>\r\n                    <input class=\"form-control\" type=\"date\" id=\"example-date-input\" defaultValue={props.date}/>\r\n                </td>\r\n                <td className=\"continentSelect\">\r\n                    <select class=\"form-select \" aria-label=\"Default select example\" defaultValue={props.continent}>\r\n                        <option value=\"USA\">USA</option>\r\n                        <option value=\"Europe\">Europe</option>\r\n                    </select>   \r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.country}/>    \r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.city}/>    \r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.place}/>    \r\n                </td>\r\n                <td className=\"avaibilitySelect\">\r\n                    <select class=\"form-select \" aria-label=\"Default select example\" >\r\n                            <option value=\"true\">Disponible</option>\r\n                            <option value=\"false\">Complet</option>\r\n                        </select> \r\n                </td>\r\n                \r\n                <td>\r\n                    <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.link}/>\r\n                </td>\r\n                <td>\r\n                <button onClick={() => {\r\n                    props.onToggleUpdateDate(parseInt(props.index));\r\n                }} type=\"button\" class=\"fas fa-edit btn btn-outline-dark\"></button>\r\n                <button  onClick={() => {\r\n                    props.onToggleDeleteDate(parseInt(props.index));\r\n                }} type=\"button\" class=\"fa fa-trash btn btn-outline-danger\"></button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n    return ( \r\n        <>\r\n            {dateInfo}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default DateTour;","import DateTour from \"./DateTour\";\r\nconst Dates = (props) => {\r\n    let dates = props.dates;\r\n    dates.sort((a, b) => {\r\n        if ( a.date < b.date ){\r\n            return -1;\r\n          }\r\n          if ( a.date > b.date ){\r\n            return 1;\r\n          }\r\n          return 0;\r\n    })\r\n\r\n    let addDate = props.addDate;\r\n    let formDisplay = {};\r\n    if (addDate === false) {\r\n        formDisplay = {\r\n            display: 'none'\r\n        }\r\n    }else{\r\n        formDisplay = {\r\n            display: 'block'\r\n        }\r\n    }\r\n    return ( \r\n        <div class=\"Dates col-12\">\r\n            <button type='submit' onClick={props.onToggleAddDate} \r\n                  class=\"my-2 btn btn-primary float-end\">{addDate == false ? \"Ajouter une date\" : \"Fermer\"}</button>\r\n                <h2 className=\"pt-3\">Dates</h2>\r\n                <div style={formDisplay} className=\"dateFormContainer col-12\">\r\n                <form className='addDate col-12' action=\"\" >\r\n                        <div  class=\"col \">\r\n                          <label for=\"example-date-input\" class=\"col-2 col-form-label\">Date</label>\r\n                          <div class=\"col\">\r\n                              <input class=\"form-control\" type=\"date\" id=\"example-date-input\"/>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Continent</label>\r\n                            <select class=\"form-select\" aria-label=\"Default select example\">\r\n                              <option selected value=\"USA\">USA</option>\r\n                              <option value=\"Europe\">Europe</option>\r\n                          </select>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Pays</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\"/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Ville</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\"/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Salle</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\"/>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <div class=\"pl-4 my-3 form-check form-switch\">\r\n                                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Disponible</label>\r\n                                <input class=\"isAvailable  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\" defaultChecked=\"true\"/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Lien de réservation</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\"/>\r\n                        </div>\r\n                        <div class=\"col-12\">\r\n                            <button onClick={props.onToggleSubmitDate} type=\"submit\" class=\"mt-3 btn btn-primary\">Ajouter</button>\r\n                        </div>\r\n\r\n                  </form>\r\n                </div>\r\n                  \r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Continent</th>\r\n                        <th scope=\"col\">Pays</th>\r\n                        <th scope=\"col\">Ville</th>\r\n                        <th scope=\"col\">Salle</th>\r\n                        <th scope=\"col\">Disponibilité</th>\r\n                        <th scope=\"col\">Lien de réservation</th>\r\n                        <th scope=\"col\">Paramètres</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody class=\"table\">\r\n                         {dates.map((date, index) => {\r\n                             return <DateTour\r\n                             onToggleUpdateDate={props.onToggleUpdateDate}\r\n                             onToggleDeleteDate={props.onToggleDeleteDate} \r\n                             key={index}\r\n                             {...date}\r\n                             index={index}\r\n                             />\r\n                         })}\r\n                    \r\n                    </tbody>\r\n                  </table>\r\n                  \r\n                  \r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Dates;","const Product = (props) => {\r\n    let sizes = props.size;\r\n    let imgStyle = {\r\n        backgroundImage: \"url(\" + props.img + \")\",\r\n        backgroundSize: \"contain\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        width : \"100%\",\r\n        height : \"250px\"\r\n\r\n    }\r\n    let availableSizes = [];\r\n    \r\n    for (const size in sizes) {\r\n        if (sizes[size] === true) {\r\n            availableSizes.push(size);\r\n        }\r\n    }\r\n    let listOfSizes = '';\r\n    for (let i = 0; i < availableSizes.length; i++) {\r\n        if (i === 0) {\r\n            listOfSizes += 'Tailles disponibles : ' + availableSizes[i];\r\n        }else{\r\n            listOfSizes += ' / ' + availableSizes[i]; \r\n        }\r\n        \r\n    }\r\n    let produit = '';\r\n    if (props.isEditing === false) {\r\n        produit = (\r\n                    <div class=\"card  product\">\r\n                        <div style={imgStyle} class=\"card-img-top\">\r\n\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                        <h2 class=\"card-title\">{props.name}</h2>\r\n                        <h5 class=\"card-title\">{props.type}</h5>\r\n                        <p class=\"card-text text\">{props.description}</p>\r\n                        <div className=\"bottom-card\">\r\n                            <p class=\"card-text\"><small class=\"text-muted\">{listOfSizes}</small></p>\r\n                            <p class=\"card-text\">{props.price} euros</p>\r\n                            <p class=\"card-text\">Lien de vente : {props.link}</p>\r\n                            <div className=\"bottom-card\">\r\n                                <button onClick={() => {props.onToggleUpdateProduct(props.index)\r\n                                }} type=\"button\" class=\"fas fa-edit btn btn-dark\"></button>\r\n                                <button onClick={() => {props.onToggleDeleteProduct(props.index)\r\n                                }} type=\"button\" class=\"fa fa-trash btn btn-danger\"></button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                                        \r\n                    </div>\r\n                );\r\n    }else{\r\n        produit = (\r\n                    <div class=\" product card\">\r\n                        <div style={imgStyle} class=\"card-img-top\">\r\n\r\n                        </div>\r\n                        <form class=\"updateBoutiqueForm col  g-3\">\r\n                        <div class=\"col updateProductForm\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Nom du produit</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.name}/>\r\n                        </div>\r\n                        <div class=\"col updateProductForm\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Genre</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.type}/>\r\n                        </div>\r\n                        <div class=\"col updateProductForm mb-3\">\r\n                            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Descriptif</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" defaultValue={props.description}></textarea>\r\n                        </div>\r\n                        <label class=\"form-check-label\" >Tailles</label>\r\n                        <div class=\"col px-4 mb-2s d-flex align-items-center tailles\">\r\n                            \r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">S</label>\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\"  defaultChecked={sizes['S'] === true ? true : false }/>\r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\">M</label>\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckChecked\" defaultChecked={sizes['M'] === true ? true : false }/>\r\n                           \r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckDisabled\">L</label>\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDisabled\"  defaultChecked={sizes['L'] === true ? true : false }/>\r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckCheckedDisabled\">XL</label>\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckCheckedDisabled\" defaultChecked={sizes['XL'] === true ? true : false }/>\r\n                            \r\n                            \r\n                        </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col updateProductForm\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Prix</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.price}/>\r\n                        </div>\r\n                        <div class=\"col updateProductForm\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Lien</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" defaultValue={props.link}/>\r\n                        </div>\r\n                        <label class=\"my-2\" for=\"inputGroupFile01\">Image</label>\r\n                        <div class=\"input-group updateProductForm mb-3\">\r\n                            <label class=\"input-group-text pt-2 fas fa-upload\" for=\"inputGroupFile01\"></label>\r\n                            <input onChange={props.uploadFile} type=\"file\" class=\"form-control\" id=\"inputGroupFile01\" required/>\r\n                        </div>\r\n                        <div className=\"bottom-card\">\r\n                        <button onClick={() => {props.onToggleUpdateProduct(props.index)\r\n                        }} type=\"button\" class=\"fas fa-edit btn btn-dark\"></button>\r\n                        <button onClick={() => {props.onToggleDeleteProduct(props.index)\r\n                        }} type=\"button\" class=\"fa fa-trash btn btn-danger\"></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            );\r\n    }\r\n    return ( \r\n        <div className=\"col-md-4 col-sm-6 mb-3\">\r\n           {produit} \r\n                    \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Product;","import Product from \"./Product\";\r\nconst Products = (props) => {\r\n    \r\n    let products = props.products;\r\n    let addProduct = props.addProduct;\r\n    let formDisplay = {};\r\n    if (addProduct === false) {\r\n        formDisplay = {\r\n            display: 'none'\r\n        }\r\n    }else{\r\n        formDisplay = {\r\n            display: 'block'\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div class=\"produits mb-5\">\r\n                <button onClick={props.onToggleAddProduct} type='submit' \r\n                class=\"my-2 btn btn-primary float-end\">{addProduct === false ? \"Ajouter une produit\" : \"Fermer\"}</button>\r\n                <h2 className=\"pt-3\">Boutique</h2>\r\n                \r\n                <div style={formDisplay} class=\"boutiqueForm col-12\">\r\n                        <form class=\" col-12  g-3\">\r\n                        <div class=\"productForm col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Nom du produit</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" />\r\n                        </div>\r\n                        <div class=\"productForm col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Genre</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" />\r\n                        </div>\r\n                        <div class=\"productForm col mb-3\">\r\n                            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Descriptif</label>\r\n                            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" ></textarea>\r\n                        </div>\r\n                        <label class=\"form-check-label\" >Tailles</label>\r\n                        <div class=\"tailles col px-4 mb-2s d-flex align-items-center\">\r\n                            \r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">S</label>\r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckChecked\" />\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckChecked\">M</label>\r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckDisabled\" />\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckDisabled\">L</label>\r\n                            </div>\r\n                            <div class=\"px-4 form-check form-switch\">\r\n                            <input class=\"  form-check-input \" type=\"checkbox\" id=\"flexSwitchCheckCheckedDisabled\"/>\r\n                            <label class=\"form-check-label\" for=\"flexSwitchCheckCheckedDisabled\">XL</label>\r\n                            \r\n                        </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"productForm col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Prix</label>\r\n                            <input type=\"number\" class=\"form-control\" id=\"inputEmail4\" />\r\n                        </div>\r\n                        <div class=\"productForm col\">\r\n                            <label for=\"inputEmail4\" class=\"form-label\">Lien</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"inputEmail4\" />\r\n                        </div>\r\n                        <label class=\"my-2\" for=\"inputGroupFile01\">Image</label>\r\n                        <div class=\"productForm input-group mb-3\">\r\n                            <label class=\"input-group-text pt-2 fas fa-upload\" for=\"inputGroupFile01\"></label>\r\n                            <input onChange={props.uploadFile} type=\"file\" class=\"form-control\" id=\"inputGroupFile01\" required/>\r\n                        </div>\r\n                        <div className=\"bottom-card\">\r\n                        <div class=\"col-12\">\r\n                        <button onClick={props.onToggleSubmitProduct} type=\"submit\" class=\"btn btn-primary\">Publier</button>\r\n                    </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class=\"d-flex col-12 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                    <div class=\"card-group  produitCards col-12\">\r\n                        {products.map((product, index) => {\r\n                            return <Product \r\n                            uploadFile={props.uploadFile}\r\n                            onToggleUpdateProduct={props.onToggleUpdateProduct}\r\n                            onToggleDeleteProduct={props.onToggleDeleteProduct}\r\n                            key={index} {...product} index={index}/>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Products;","\r\nconst Message = (props) => {\r\n    let mailto = 'mailto:'+ props.email;\r\n    return ( \r\n        <div className=\"col-md-6 col-sm-12\">\r\n            <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h6 class=\"card-subtitle mb-2 text-muted float-end\">{props.date} à {props.hour}</h6>\r\n                <h4 class=\"card-title\">{props.name}</h4>\r\n                <h5 class=\"card-subtitle mb-2 text-muted\">Objet : {props.subject}</h5>\r\n                \r\n                <p class=\"card-text\">{props.message}</p>\r\n                <a href={mailto}\r\n                 class=\"card-link\"><button type='submit' class=\"btn btn-primary float-end\">Répondre</button></a>\r\n                 <button onClick={() => {\r\n                    props.onToggleDeleteMessage(parseInt(props.index))\r\n                }} type='submit' class=\"btn btn-outline-danger mx-2 float-end\">Effacer</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Message;","import Message from \"./Message\";\r\n\r\nconst Messages = (props) => {\r\n    let messages = props.messages;\r\n    return ( \r\n        <div class=\"produits mb-5\">\r\n                <h2 className=\"pt-3\">Messages</h2>\r\n                <div class=\"d-flex col-12 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                    <div class=\"card-group messagesCards col-12\">\r\n                        {messages.map((message, index) => {\r\n                            return <Message key={index} \r\n                            {...message}\r\n                            index={index}\r\n                            onToggleDeleteMessage={props.onToggleDeleteMessage}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Messages;","\r\nconst Experience = (props) => {\r\n    let mailto = 'mailto:'+ props.email;\r\n    let buttonDisplay = {};\r\n    let certificateDisplay = {};\r\n    if (props.isValidated === false) {\r\n        buttonDisplay = {\r\n            display : 'block'\r\n        };\r\n        certificateDisplay = {\r\n            display : 'none'\r\n        };\r\n    }else{\r\n        buttonDisplay = {\r\n            display : 'none'\r\n        };\r\n        certificateDisplay = {\r\n            display : 'inline-block',\r\n            color : 'rgb(100, 189, 10)'\r\n        };\r\n    }\r\n    return ( \r\n        <div className=\" col-md-6 col-sm-12\">\r\n            <div class=\"card col-12\">\r\n            <div class=\"card-body\">\r\n                <h6 class=\"card-subtitle mb-2 text-muted float-end\">{props.date} à {props.hour}</h6>\r\n                <h6 class=\"card-title text-muted\"><a href={mailto}\r\n                 class=\"card-link\">{props.email}</a></h6>\r\n                <h5 class=\"card-subtitle mb-2 text-muted\">Titre : {props.subject}</h5>\r\n                \r\n                <p class=\"card-text\">{props.text}</p>\r\n                <button style={buttonDisplay} onClick={(event) => {\r\n                    props.onToggleValidateExperience(event, parseInt(props.index))\r\n                }} type='submit' class=\"btn btn-primary float-end\">Valider</button>\r\n                 <button onClick={() => {\r\n                    props.onToggleDeleteExperience(parseInt(props.index))\r\n                }} type='submit' class=\"btn btn-outline-danger mx-2 float-end\">Effacer</button>\r\n                <p class=\"card-text text-muted\"><i style={certificateDisplay} class=\"fas fa-certificate\"></i> {props.isValidated === false ? 'En attente de validation...' : 'Validée'}</p>\r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Experience;","import Experience from \"./Experience\";\r\n\r\nconst Experiences = (props) => {\r\n    let experiences = props.experiences;\r\n    return ( \r\n        <div class=\"experiences mb-5\">\r\n                <h2 className=\"pt-3\">Experiences</h2>\r\n                <div class=\"d-flex col-12 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                    <div class=\"card-group experiencesCards col-12\">\r\n                        {experiences.map((experience, index) => {\r\n                            return <Experience key={index} \r\n                            {...experience}\r\n                            index={index}\r\n                            onToggleDeleteExperience={props.onToggleDeleteExperience}\r\n                            onToggleValidateExperience={props.onToggleValidateExperience}\r\n                            onToggleDeleteExperience={props.onToggleDeleteExperience}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Experiences;","import Admins from \"./Admins/Admins\";\r\nimport Articles from \"./Articles/Articles\";\r\nimport Dates from \"./Dates/Dates\";\r\nimport Products from \"./Products/Products\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Experiences from \"./Experiences/Experiences\";\r\nconst Dashboard = (props) => {\r\n  let componentToDisplay;\r\n  let displayDashboard = props.displayDashboard;\r\n  if (displayDashboard.administrateurs === true) {\r\n    componentToDisplay = <Admins\r\n    onToggleDeleteAdmin={props.onToggleDeleteAdmin}\r\n    onToggleAddAdmin={props.onToggleAddAdmin}\r\n    onToggleSubmitAdmin={props.onToggleSubmitAdmin} \r\n    addAdmin={props.addAdmin} \r\n    onToggleUpdateAdmin={props.onToggleUpdateAdmin}\r\n    admins={props.admins}/>\r\n  }\r\n  if (displayDashboard.publications === true) {\r\n    componentToDisplay = <Articles\r\n    onToggleDeleteArticle={props.onToggleDeleteArticle}\r\n    onToggleUpdateArticle={props.onToggleUpdateArticle}\r\n    uploadFile={props.uploadFile}\r\n    isAddArticle={props.isAddArticle}\r\n    onToggleSubmitArticle={props.onToggleSubmitArticle}\r\n    onToggleAddArticle={props.onToggleAddArticle}\r\n    articles={props.articles}/>\r\n  }\r\n  if (displayDashboard.dates === true) {\r\n    componentToDisplay = <Dates \r\n    onToggleUpdateDate={props.onToggleUpdateDate}\r\n    onToggleDeleteDate={props.onToggleDeleteDate}\r\n    dates={props.dates}\r\n    onToggleSubmitDate={props.onToggleSubmitDate}\r\n    onToggleAddDate={props.onToggleAddDate}\r\n    addDate={props.addDate} />\r\n  }\r\n  if (displayDashboard.boutique === true) {\r\n    componentToDisplay = <Products\r\n    onToggleUpdateProduct={props.onToggleUpdateProduct}\r\n    onToggleDeleteProduct={props.onToggleDeleteProduct}\r\n    products={props.products}\r\n    uploadFile={props.uploadFile}\r\n    onToggleSubmitProduct={props.onToggleSubmitProduct}\r\n    onToggleAddProduct={props.onToggleAddProduct}\r\n    addProduct={props.addProduct}/>\r\n  }\r\n  if (displayDashboard.experiences === true) {\r\n    componentToDisplay = <Experiences\r\n    experiences={props.experiences}\r\n    onToggleValidateExperience={props.onToggleValidateExperience}\r\n    onToggleDeleteExperience={props.onToggleDeleteExperience}\r\n    />\r\n  }\r\n  if (displayDashboard.messages === true) {\r\n    componentToDisplay = <Messages\r\n    onToggleDeleteMessage={props.onToggleDeleteMessage}\r\n    messages={props.messages}\r\n    />\r\n  }\r\n    return ( \r\n        \r\n<div>\r\n      <header class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a class=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" href=\"#\">Espace d'administration - LANA DEL REY</a>\r\n        <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        \r\n        <nav class=\"navbar navbar-light bg-dark\">\r\n            <div class=\"container-fluid user\">\r\n              <span class=\"navbar-brand mb-0 h1\"></span>\r\n                <img src=\"\" alt=\"user\"/>\r\n            </div>\r\n        </nav>\r\n        <ul class=\"navbar-nav px-3\">\r\n          <li class=\"nav-item text-nowrap\">\r\n            <a onClick={props.onToggleLogout} class=\"nav-link logout\" href=\"#\">Se déconnecter</a>\r\n          </li>\r\n          \r\n        </ul>\r\n      </header>       \r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block position-fixed bg-light sidebar collapse vh-100\">\r\n            <div class=\"position-sticky pt-3\">\r\n              <ul class=\"nav flex-column\">\r\n                <li class=\"nav-item\">\r\n                  <a onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : true,\r\n                      publications : false,\r\n                      dates : false,\r\n                      boutique : false,\r\n                      experiences : false,\r\n                      messages : false\r\n                    })\r\n                  }} class=\"admins nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    <span data-feather=\"home\"></span>\r\n                    Administrateurs\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : false,\r\n                      publications : true,\r\n                      dates : false,\r\n                      boutique : false,\r\n                      experiences : false,\r\n                      messages : false\r\n                    })\r\n                  }} class=\"publications nav-link\" href=\"#\">\r\n                    <span data-feather=\"file\"></span>\r\n                    Publications\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : false,\r\n                      publications : false,\r\n                      dates : true,\r\n                      boutique : false,\r\n                      experiences : false,\r\n                      messages : false\r\n                    })\r\n                  }} class=\"dates nav-link\" href=\"#\">\r\n                    <span data-feather=\"shopping-cart\"></span>\r\n                    Dates\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : false,\r\n                      publications : false,\r\n                      dates : false,\r\n                      boutique : true,\r\n                      experiences : false,\r\n                      messages : false\r\n                    })\r\n                  }} class=\"boutique nav-link\" href=\"#\">\r\n                    <span data-feather=\"users\"></span>\r\n                    Boutique\r\n                  </a>\r\n                </li>\r\n                <li class=\"comments nav-item\">\r\n                  <a  onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : false,\r\n                      publications : false,\r\n                      dates : false,\r\n                      boutique : false,\r\n                      experiences : true,\r\n                      messages : false\r\n                    })\r\n                  }} class=\"nav-link\" href=\"#\">\r\n                    <span data-feather=\"layers\"></span>\r\n                    Experiences\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a onClick={() => {\r\n                    props.setDisplayDashboard({\r\n                      administrateurs : false,\r\n                      publications : false,\r\n                      dates : false,\r\n                      boutique : false,\r\n                      experiences : false,\r\n                      messages : true\r\n                    })\r\n                  }} class=\"messages nav-link\" href=\"#\">\r\n                    <span data-feather=\"bar-chart-2\"></span>\r\n                    Messages\r\n                  </a>\r\n                </li>\r\n\r\n              </ul>\r\n      \r\n              \r\n            </div>\r\n          </nav>\r\n      \r\n          <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n            \r\n            {componentToDisplay}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Dashboard;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyAo_tqww5nLQFwfj-8G_2oOnUjAXujXWsQ\",\r\n    authDomain: \"lab201-lem.firebaseapp.com\",\r\n    databaseURL: \"https://lab201-lem-default-rtdb.europe-west1.firebasedatabase.app/\",\r\n    projectId: \"lab201-lem\",\r\n    storageBucket: \"lab201-lem.appspot.com\",\r\n    messagingSenderId: \"946540009065\",\r\n    appId: \"1:946540009065:web:7f88aa65070f86d6a0f4f8\",\r\n    measurementId: \"G-86MZGG5Y8E\"\r\n  };\r\n\r\n\r\nexport default firebaseConfig;","import { useState, useEffect } from \"react\";\nimport Dashboard from \"./Components/dashboard\";\nimport './css/dashboard.css';\nimport swal from 'sweetalert';\nimport Swal from 'sweetalert2';\nimport firebase from 'firebase/firebase';\nimport 'firebase/firebase-auth';\n\nimport firebaseConfig from \"./Components/firebaseConfig\";\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().onAuthStateChanged(function(user) {\n  if (!user) {\n      window.location.href = \"../../index.html\";\n  }\n});\nlet firebaseDb = firebase.database().ref();\n\nfunction setStateData(setter, path) {\n  const dataRef = firebaseDb.child(path);\n    dataRef.on('value', (snapshot) => {\n      const values = snapshot.val();\n      const valuesList = [];\n      for (let id in values) {\n        valuesList.push({ id, ...values[id] });\n      }\n      setter(valuesList);\n    });\n}\n\n function updateData(path, element, update) {\n const dataRef = firebase.database().ref(path).child(element.id); \n dataRef.update(update);\n}\nfunction deleteData(path, element) {\n  const dataRef = firebase.database().ref(path).child(element.id); \n  dataRef.remove(); \n}\n\nfunction pushData(path, data) {\n  let dataToPush = firebaseDb.child(path);\n  dataToPush.push(data);\n}\n\n\nfunction getCurrentDate() {\n  const date = new Date();\n  const year = date.getUTCFullYear();\n  const month = '0' + (date.getMonth()+1);\n  const day = '0' + date.getDate();\n  const currentDate = day.substr(-2) + '/' + month.substr(-2) + '/' + year;\n  return currentDate;\n}\nconst Toast = Swal.mixin({\n  toast: true,\n  position: 'bottom-end',\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: (toast) => {\n    toast.addEventListener('mouseenter', Swal.stopTimer)\n    toast.addEventListener('mouseleave', Swal.resumeTimer)\n  }\n})\nfunction isMailValid(email){\n\tif(email.length < 8 || email.length > 30) return false;\n\tif(email.indexOf(\"@\") < 2) return false;\n\tif(email.split('@').length > 2) return false;\n\treturn true;\t\n}\n\nfunction isNameValid(name){\n\tif(name.length < 2 || name.length > 20) return false;\n\tif(name.indexOf('*') > -1 || name.indexOf('$') > -1 \n\t|| name.indexOf('&') > -1 || name.indexOf('#') > -1 \n\t|| name.indexOf(\"\\\\\") > -1 || name.indexOf('@') > -1 ){\n\treturn false;\n\t}\n\treturn true;\t\n}\nfunction Apps() {\n\n  const [admins, setAdmins] = useState([]);\n  const [connectedUser, setConnectedUser] = useState(null);\n  const [addAdmin, setAddAdmin] = useState(false);\n  const [articles, setArticles] = useState([]);\n  const [isAddArticle, setIsAddArticle] = useState(false);\n  const [dates, setDates] = useState([]);\n  const [addDate, setAddDate] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [addProduct, setAddProduct] = useState(false);\n\n  const [displayDashboard, setDisplayDashboard] = useState({\n    administrateurs : true,\n    publications : false,\n    dates : false,\n    boutique : false,\n    experiences : false,\n    messages : false\n  });\n\n  const [messages, setMessages] = useState([]);\n  const [experiences, setExperiences] = useState([]);\n  const onToggleLogout =(event) => {\n    firebase.auth().signOut();\n  }\nuseEffect(async () => {\n  await firebase.auth().onAuthStateChanged(async function (user) {\n     if (await user) {\n        setConnectedUser(user);\n        let userName = document.querySelector('.user span');\n        let userImg = document.querySelector('.user img');\n        userName.innerHTML = user.displayName;\n        userImg.src = user.photoURL;\n    }\n  });\n}, []);\n\nuseEffect(() => {\n  setStateData(setAdmins, 'admins');\n}, []);\n\nuseEffect(() => {\n  setStateData(setArticles, 'publications');\n}, []); \nuseEffect(() => {\n  setStateData(setDates, 'dates');\n  \n}, []);\nuseEffect(() => {\n  setStateData(setProducts, 'products');\n}, []); \nuseEffect(() => {\n  setStateData(setMessages, 'messages');\n}, []); \nuseEffect(() => {\n  setStateData(setExperiences, 'experiences');\n}, []);\nconst onToggleAddAdmin = (event) => {\n  event.preventDefault();\n  setAddAdmin(!addAdmin);\n  let inputs = document.querySelectorAll('.addAdmin input');  \n  for (let i = 0; i < inputs.length; i++) {\n    inputs[i].value = '';;\n  }\n}\nconst onToggleSubmitAdmin = (event) => {\n  event.preventDefault();\n  let inputs = document.querySelectorAll('.addAdmin input');\n  const [name, poste, email] = inputs;\n  if (name.value && poste.value && email.value) {\n    if (isNameValid(name.value) == true) {\n      if (isMailValid(email.value) == true) {\n        let newAdminInfo = {\n          name: name.value,\n          poste: poste.value,\n          email : email.value,\n          isEditing : false,\n          \n        }\n          for (let i = 0; i < inputs.length; i++) {\n            inputs[i].value = '';\n          }\n          pushData('admins', newAdminInfo);\n          setAddAdmin(!addAdmin);\n          \n          Toast.fire({\n            icon: 'success',\n            title: 'Ajouté avec succès'\n          })\n          setAddAdmin(!addAdmin);\n      }else{\n        swal('Attention', \"L'adresse e-mail saisie est invalide\");\n    }\n    }else{\n      swal('Attention', \"Le nom saisi est invalide\");\n  }\n  }else{\n        swal('Attention', \"Les champs n'ont pas été correctement saisis\");\n    }\n} \nconst onToggleUpdateAdmin = (index) => {\n  setAdmins(admins.map((admin)=> {\n    if (index === admins.indexOf(admin)) {\n      if (admins[index].isEditing === false) {\n        updateData('admins', admin, {isEditing : true});\n        admins[index].isEditing = true;\n      }else{\n        let inputs = document.querySelectorAll('td input');\n        const [name, poste, email] = inputs;\n        if (name.value && poste.value && email.value) {\n          if (isNameValid(name.value) == true) {\n            if (isMailValid(email.value) == true) {\n              let updateAdmin = { \n                isEditing:false,\n                id : admin.id,\n                name: name.value.trim(),\n                poste: poste.value.trim(),\n                email: email.value.trim(),\n              };\n            updateData('admins', admin, updateAdmin);\n            admin = updateAdmin;\n        \n            Toast.fire({\n              icon: 'success',\n              title: 'Mise à jour avec succès'\n            })\n            }else{\n                swal('Attention', \"L'adresse e-mail saisie est invalide\");\n            }\n          }else{\n            swal('Attention', \"Le nom saisi est invalide\");\n        }\n          \n        }else{\n          swal('Attention', \"Les champs n'ont pas été correctement saisis\");\n        }\n        \n      }\n    }\n    return admin;\n  }));\n}\nconst onToggleDeleteAdmin = (index) => {\n  if (admins.length > 1) {\n      setAdmins(admins.filter((admin)=> {\n      if (admins.length >= 1 && index !== admins.indexOf(admin)) {\n        return admin;\n      }else{\n        deleteData('admins', admin);\n        Toast.fire({\n          icon: 'warning',\n          title: 'Supprimé avec succès'\n        })\n      }\n    }));\n  }else{\n    swal('Attention', \"Il doit y avoir au moins un administrateur\");\n  }\n  \n}\nfunction clearArticleForm(inputs, textareas) {\n  for (let i = 0; i < inputs.length; i++) {\n    inputs[i].value = '';\n  }\n  for (let j = 0; j < textareas.length; j++) {\n    textareas[j].value = '';\n  }\n  \n}\nconst onToggleAddArticle = (event) => {\n  setIsAddArticle(!isAddArticle); \n  let inputs = document.querySelectorAll('.articleForm input');\n  let textareas = document.querySelectorAll('.articleForm textarea');\n  clearArticleForm(inputs, textareas)\n}\n\nconst onToggleSubmitArticle = async (event) => {\n  event.preventDefault();\n  let inputs = document.querySelectorAll('.articleForm input');\n  let textareas = document.querySelectorAll('.articleForm textarea');\n\n  if (inputs[0].value && inputs[1].value && textareas[0].value && textareas[1].value) {\n    let imgPath = inputs[1].value.trim();\n    let newArticleInfo = {\n      title : inputs[0].value.trim(),\n      resume: textareas[0].value.trim(),\n      text: textareas[1].value.trim(),\n      img: await firebase.storage().ref('articles_images').child(imgPath.substring(imgPath.lastIndexOf('\\\\') + 1)).getDownloadURL(),\n      date : 'Publié le ' + getCurrentDate(),\n      author : connectedUser.displayName.split(' ')[0],\n      isEditing : false\n    }\n    \n    pushData('publications', newArticleInfo);\n    \n    Toast.fire({\n      icon: 'success',\n      title: 'Publié avec succès'\n    })\n  }\n  clearArticleForm(inputs, textareas);\n  setIsAddArticle(!isAddArticle);\n}\nconst uploadFile = async (event) => {\n  let file = event.target.files[0];\n  let imgRef = firebase.storage().ref('articles_images').child(file.name);\n  await imgRef.put(file);\n}\nconst onToggleUpdateArticle = async (index) => {\n  let selectedArticle = null;\n  let imgPath = null;\n  setArticles(articles.map((article) => {\n    if (index === articles.indexOf(article)) {\n      selectedArticle = article;\n      if (articles[index].isEditing === false) {\n        article.isEditing = true;\n      } else{\n        let inputs = document.querySelectorAll('.updateArticleForm input');\n        let textareas = document.querySelectorAll('.updateArticleForm textarea');\n        if (inputs[0].value && inputs[1].value && textareas[0].value && textareas[1].value) {\n          imgPath = inputs[1].value.trim();\n\n          let updateArticleInfo ={\n            title : inputs[0].value.trim(),\n            resume: textareas[0].value.trim(),\n            text: textareas[1].value.trim(),\n            img : '',\n            date : 'Dernière mise à jour le ' + getCurrentDate(), \n            author : connectedUser.displayName.split(' ')[0], \n            id : article.id,\n            isEditing : false\n          };\n          updateData('publications', article, updateArticleInfo);\n          article = updateArticleInfo;\n          \n        }else{\n          swal('Attention', \"Tous les champs doivent être remplis\");\n        }\n\n      }\n    }\n    return article;\n  }));\n\n  if (imgPath) {\n    updateData('publications', selectedArticle, {img : await firebase.storage().ref('articles_images').child(imgPath.substring(imgPath.lastIndexOf('\\\\') + 1)).getDownloadURL()});\n    Toast.fire({\n      icon: 'success',\n      title: 'Mise à jour avec succès'\n    })\n  }\n}\nconst onToggleDeleteArticle = (index) => {\n  \n  if (articles.length > 1) {\n      setArticles(articles.filter((article)=> {\n      if (articles.length > 1 && index !== articles.indexOf(article)) {\n        return article;\n      }else{\n        deleteData('publications', article);\n        Toast.fire({\n          icon: 'warning',\n          title: 'Supprimé avec succès'\n        })\n      }\n      \n    }));\n  }else{\n    swal('Attention', \"Il doit y avoir au moins une publication\");\n  }\n\n}\nconst onToggleAddDate = (event) => {\n  setAddDate(!addDate); \n  let inputs = document.querySelectorAll('.addDate input');\n  for (let i = 0; i < inputs.length; i++) {\n    inputs[i].value = '';\n  }\n}\nconst onToggleSubmitDate = (event) => {\n  event.preventDefault();\n  let inputs = document.querySelectorAll('.addDate input');\n  let select = document.querySelector('.addDate select');\n  \n  const [date, country, city, place, isAvailable, link] = inputs;\n  if (date.value && country.value && city.value && place.value && link.value) {\n    let newDateInfo = {\n      date : date.value.trim(),\n      continent : select.value,\n      country : country.value.trim(),\n      city: city.value.trim(),\n      place : place.value.trim(),\n      isAvailable : isAvailable.checked,\n      link : link.value.trim(),\n      isEditing : false\n    }\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].value = '';\n    }\n    pushData('dates', newDateInfo);\n    \n    Toast.fire({\n      icon: 'success',\n      title: 'Ajoutée avec succès'\n    })\n    setAddDate(!addDate);\n  }else{\n    swal('Attention', \"Tous les champs doivent être remplis\");\n  }\n    \n}\nconst onToggleDeleteDate = (index) => {\n\n      setDates(dates.filter((date)=> {\n      if (index !== dates.indexOf(date)) {\n        return date;\n      }else{\n        deleteData('dates', date);\n        Toast.fire({\n          icon: 'warning',\n          title: 'Supprimée avec succès'\n        })\n      }\n      \n    }));\n}\nconst onToggleUpdateDate = (index) => {\n    let inputs = document.querySelectorAll('.dateTable input');\n    const [updateDate, country, city, place, link] = inputs;\n    let continentSelect = document.querySelector('.dateTable .continentSelect select');\n    let avaibilitySelect = document.querySelector('.dateTable .avaibilitySelect select');\n    \n    setDates(dates.map((date) => {\n      if (index === dates.indexOf(date)) {\n        if (dates[index].isEditing === false) {\n          date.isEditing = true;\n        } else{\n          \n          if (updateDate.value && country.value && city.value && place.value && link.value) {\n\n            let updateDateInfo ={\n              date : updateDate.value.trim(),\n              continent : continentSelect.value,\n              country : country.value.trim(),\n              city : city.value.trim(),\n              place : place.value.trim(),\n              isAvailable : avaibilitySelect.value == \"true\" ? true : false,\n              link : link.value.trim(),\n              id : date.id,\n              isEditing : false\n            };\n            updateData('dates', date, updateDateInfo);\n            date = updateDateInfo;\n            \n            Toast.fire({\n              icon: 'success',\n              title: 'Mise à jour avec succès'\n            })\n          }else{\n            swal('Attention', \"Tous les champs doivent être remplis\");\n          }\n  \n        }\n      }\n      return date;\n    }));\n}\n\nfunction clearProductForm(inputs, sizes, description) {\n  for (let i = 0; i < inputs.length; i++) {\n    inputs[i].value = '';\n  }\n  for (let i = 0; i < sizes.length; i++) {\n    sizes[i].checked = false;\n  }\n  description.value = '';\n}\n  const onToggleAddProduct = (event) => {\n    setAddProduct(!addProduct); \n    let inputs = document.querySelectorAll('.boutiqueForm input');\n    let sizes = document.querySelectorAll('.boutiqueForm .tailles input');\n    const description = document.querySelector('.boutiqueForm textarea');\n    clearProductForm(inputs, sizes, description);\n  }\n\n  const onToggleSubmitProduct = async (event) => {\n    event.preventDefault();\n    let inputs = document.querySelectorAll('.productForm input');\n    let sizes = document.querySelectorAll('.boutiqueForm .tailles input');\n    const description = document.querySelector('.boutiqueForm textarea');\n    const [name, type, price, link, img] = inputs;\n    const [sizeS, sizeM, sizeL, sizeXL] = sizes;\n    console.log(inputs);\n    if (name.value && type.value && description.value && price.value && link.value && img.value) {\n      let newProductInfo = {\n        name : name.value.trim(),\n        type: type.value.trim(),\n        description: description.value.trim() ,\n        size : {\n          S : sizeS.checked,\n          M : sizeM.checked,\n          L : sizeL.checked,\n          XL : sizeXL.checked\n        },\n        price : price.value.trim(),\n        link : link.value.trim(),\n        img : await firebase.storage().ref('articles_images').child(img.value.substring(img.value.lastIndexOf('\\\\') + 1)).getDownloadURL(),\n        date : 'Publié le ' + getCurrentDate(),\n        isEditing : false\n      }\n      pushData('products', newProductInfo);\n      \n      Toast.fire({\n        icon: 'success',\n        title: 'Publié avec succès'\n      })\n    }\n    clearProductForm(inputs, sizes, description);\n    setAddProduct(!addProduct);\n  }\n  const onToggleUpdateProduct = async (index) => {\n    let selectedProduct = null;\n    let imgPath = null;\n    setProducts(products.map((product) => {\n      if (index === products.indexOf(product)) {\n        selectedProduct = product;\n        if (products[index].isEditing === false) {\n          product.isEditing = true;\n        } else{\n          let inputs = document.querySelectorAll('.updateProductForm input');\n          let sizes = document.querySelectorAll('.updateBoutiqueForm .tailles input');\n          const description = document.querySelector('.updateBoutiqueForm textarea');\n          const [name, type, price, link, img] = inputs;\n          const [sizeS, sizeM, sizeL, sizeXL] = sizes;\n\n          if (name.value && type.value && description.value && price.value && link.value && img.value) {\n            imgPath = img.value;\n            let updatedProductInfo = {\n              name : name.value.trim(),\n              type: type.value.trim(),\n              description: description.value.trim() ,\n              size : {\n                S : sizeS.checked,\n                M : sizeM.checked,\n                L : sizeL.checked,\n                XL : sizeXL.checked\n              },\n              price : price.value.trim(),\n              link : link.value.trim(),\n              img : '',\n              date : 'Publié le ' + getCurrentDate(),\n              isEditing : false\n            }\n            \n            updateData('products', product, updatedProductInfo);\n            product.isEditing = false;\n            \n            \n          }else{\n            swal('Attention', \"Tous les champs doivent être remplis\");\n          }\n        }\n      }\n      return product;\n    }));\n  \n    if (imgPath) {\n      updateData('products', selectedProduct, {img : await firebase.storage().ref('articles_images').child(imgPath.substring(imgPath.lastIndexOf('\\\\') + 1)).getDownloadURL()});\n      \n      Toast.fire({\n        icon: 'success',\n        title: 'Mise à jour avec succès'\n      })\n    }\n  }\n  const onToggleDeleteProduct = (index) => {\n\n    setProducts(products.filter((product)=> {\n    if (index !== products.indexOf(product)) {\n      return product;\n    }else{\n      deleteData('products', product);\n      \n      Toast.fire({\n        icon: 'warning',\n        title: 'Supprimé avec succès'\n      })\n    }\n    \n  }));\n}\nconst onToggleDeleteMessage = (index) => {\n\n  setMessages(messages.filter((message)=> {\n  if (index !== messages.indexOf(message)) {\n    return message;\n  }else{\n    deleteData('messages', message);\n    \n    Toast.fire({\n      icon: 'warning',\n      title: 'Supprimé avec succès'\n    })\n  }\n  \n}));\n}\nconst onToggleValidateExperience = (event, index) => {\n  setExperiences(experiences.map((experience) => {\n    if (index === experiences.indexOf(experience)) {\n        updateData('experiences', experience, {isValidated : true});\n        experience.isValidated = true;\n        Toast.fire({\n          icon: 'success',\n          title: 'Mise en ligne'\n        })\n    }\n    return experience;\n  }));\n\n}\nconst onToggleDeleteExperience = (index) => {\n\n  setExperiences(experiences.filter((experience)=> {\n  if (index !== experiences.indexOf(experience)) {\n    return experience;\n  }else{\n    deleteData('experiences', experience);\n    \n    Toast.fire({\n      icon: 'warning',\n      title: 'Supprimé avec succès'\n    })\n  }\n  \n}));\n}\n  return (\n    <div>\n      <Dashboard\n      onToggleDeleteExperience={onToggleDeleteExperience}\n      onToggleValidateExperience={onToggleValidateExperience}\n      experiences={experiences}\n      onToggleDeleteMessage={onToggleDeleteMessage}\n      messages={messages}\n      setDisplayDashboard={setDisplayDashboard}\n      displayDashboard={displayDashboard}\n      onToggleDeleteProduct={onToggleDeleteProduct}\n      onToggleUpdateProduct={onToggleUpdateProduct}\n      products={products}\n      onToggleSubmitProduct={onToggleSubmitProduct}\n      onToggleAddProduct={onToggleAddProduct}\n      addProduct={addProduct}\n      onToggleUpdateDate={onToggleUpdateDate}\n      onToggleDeleteDate={onToggleDeleteDate}\n      dates={dates}\n      onToggleSubmitDate={onToggleSubmitDate}\n      onToggleAddDate={onToggleAddDate}\n      onToggleDeleteArticle={onToggleDeleteArticle}\n      onToggleUpdateArticle={onToggleUpdateArticle}\n      uploadFile={uploadFile}\n      isAddArticle={isAddArticle}\n      onToggleSubmitArticle={onToggleSubmitArticle}\n      onToggleAddArticle={onToggleAddArticle}\n      onToggleDeleteAdmin={onToggleDeleteAdmin}\n      onToggleAddAdmin={onToggleAddAdmin}\n      onToggleSubmitAdmin={onToggleSubmitAdmin}\n      addDate={addDate} \n      addAdmin={addAdmin} \n      articles={articles} \n      admins={admins}\n      onToggleLogout={onToggleLogout}\n      onToggleUpdateAdmin={onToggleUpdateAdmin}\n      connectedUser={connectedUser}\n       />\n    </div>\n  );\n}\n\nexport default Apps;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}